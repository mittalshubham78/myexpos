//library 
loadi(63,13);
loadi(64,14);

//load INIT program
loadi(65,7);
loadi(66,8);

//load INT10 program
loadi(22,35);
loadi(23,36);

//load INT7 for program
loadi(16,29);
loadi(17,30);

//load exception handler
loadi(2,15);
loadi(3,16);

//load timer interrupt
loadi(4,17);
loadi(5,18);

//load module 0
loadi(40,53);
loadi(41,54);

//load module 4
loadi(48,61);
loadi(49,62);

//load console interrupt handler
loadi(8,21);
loadi(9,22);

//load interrupt 6
loadi(14,27);
loadi(15,28);

//load interrupt 9
loadi(20,33);
loadi(21,34);

//load module 1
loadi(42,55);
loadi(43,56);

//load module 2
loadi(44,57);
loadi(45,58);

//load disk interrupt
loadi(6,19);
loadi(7,20);

//load inode table
loadi(59,3);
loadi(60,4);

//load exec process
//loadi(83,69);

//load disk free list
loadi(61,2);

//load interrupt 8
loadi(18,31);
loadi(19,32);

//load interrupt 11
loadi(24,37);
loadi(25,38);

//load interrupt 15
loadi(32,45);
loadi(33,46);

//load interrupt 13
loadi(28,41);
loadi(29,42);

//load interrupt 14
loadi(30,43);
loadi(31,44);

//load interrupt 4
loadi(10,23);
loadi(11,24);

//load root file
 loadi(62,5);

//load interrupt 5
  loadi(12,25);
  loadi(13,26);

//load file manager module
  loadi(46,59);
  loadi(47,60);


[TERMINAL_STATUS_TABLE]=0;

alias i R0;
i=0;
while(i < 16) do
  [PROCESS_TABLE+(i*16)+4]=TERMINATED;
   i=i+1;
  endwhile;

i=0;
 
 while(i < 128) do
   if(i < 83) then
   [MEMORY_FREE_LIST +i]=1;

    else
    [MEMORY_FREE_LIST + i]=0;
    
  endif;
   i=i+1;
    endwhile;


[SYSTEM_STATUS_TABLE +2]=45;
[SYSTEM_STATUS_TABLE +3]=0;
[DISK_STATUS_TABLE]=0;


i=0;

 while(i < MAX_SEM_COUNT) do
    [SEMAPHORE_TABLE + (4*i)]=-1;
    [SEMAPHORE_TABLE + (4*i) +1]=0;
  i=i+1;
  endwhile;

i=0;

 while(i < MAX_FILE_NUM) do
  [FILE_STATUS_TABLE + (4*i)]=-1;
   [FILE_STATUS_TABLE + (4*i) +1]=-1;
   i=i+1;
  endwhile;

i=0;
 while(i < MAX_BUFFER) do
  [BUFFER_TABLE + 4*i]=-1;
   [BUFFER_TABLE + 4*i +1]=0;
  [BUFFER_TABLE + 4*i +2]=-1;
  i=i+1;
 endwhile;

i=0;

while(i < MAX_OPENFILE_NUM) do
  [OPEN_FILE_TABLE + i*4]=-1;
   [OPEN_FILE_TABLE + i*4 +1]=0;
  i=i+1;
 endwhile;

PTBR=PAGE_TABLE_BASE+20;
PTLR=10;

[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

//PTBR = PTBR+20;

PTBR=PTBR-20;
//[PTBR+0]=63;
//[PTBR+1]="0100";
//[PTBR+2]=64;
//[PTBR+3]="0100";

//[PTBR+4]=85;
//[PTBR+5]="0110";
//[PTBR+6]=86;
//[PTBR+7]="0110";

//[PTBR+8]=83;
//[PTBR+9]="0100";
//[PTBR+10]=-1;
//[PTBR+11]="0000";
//[PTBR+12]=-1;
//[PTBR+13]="0000";
//[PTBR+14]=-1;
//[PTBR+15]="0000";

//[PTBR+16]=87;
//[PTBR+17]="0110";
//[PTBR+18]=88;
//[PTBR+19]="0110";

//PTBR=PTBR-40;
[PROCESS_TABLE +16+1]=1;
[PROCESS_TABLE +16 +3]=1;
[PROCESS_TABLE +16+4]=CREATED;
[PROCESS_TABLE +16+11]=80;
[PROCESS_TABLE +16+13]=8*512;
[PROCESS_TABLE +16+12]=0;
[PROCESS_TABLE +16+14]=PAGE_TABLE_BASE +20;
[PROCESS_TABLE +16+15]=10;
[76*512]=[65*512+1];

//[PROCESS_TABLE +32+1]=2;
//[PROCESS_TABLE +32+4]=CREATED;
//[PROCESS_TABLE +32+11]=89;
//[PROCESS_TABLE +32+13]=8*512;
//[PROCESS_TABLE +32+12]=0;
//[PROCESS_TABLE +32+14]=PAGE_TABLE_BASE+40;
//[PROCESS_TABLE +32+15]=10;
//[87*512]=[83*512+1];

i=496;

  while(i<=511) do
   [80*512+i]=-1;
    i=i+2;
  endwhile;

i=0;

 while(i < 10) do
  [DISK_MAP_TABLE +i]=-1;
   i=i+1;
  endwhile;

[DISK_MAP_TABLE +10 +4]=7;
[DISK_MAP_TABLE +10 +5]=8;
[DISK_MAP_TABLE +10 +6]=-1;
[DISK_MAP_TABLE +10 +7]=-1;

return;
